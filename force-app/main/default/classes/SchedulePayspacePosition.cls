public class SchedulePayspacePosition implements Schedulable {
    public void execute(SchedulableContext sc) {
        try {
            // Query employees to be synced, filter out those already synced
            List<flair__Employee__c> employeesToSync = [SELECT Id, flair__Employee_Number__c, flair__Start_Date__c, 
                                                        Position_Created_On_PaySpace__c, flair__Entity__r.Name, flair__Position__c
                                                        FROM flair__Employee__c 
                                                        WHERE Position_Created_On_PaySpace__c = FALSE
                                                        AND LastModifiedDate > YESTERDAY
                                                        LIMIT 50
                                                       ];
            
            // Map to store OrganizationGroup values based on Entity Name
            Map<String, String> entityToOrgGroup = new Map<String, String>{
                'Burkina Faso' => 'Lapaire Glasses Burkina-Faso SARL',
                'Bénin' => 'Lapaire Glasses Bénin SARL',
                'Mali' => 'Lapaire Glasses Mali SARL',
                'Togo' => 'Lapaire Glasses Togo SARL',
                'Uganda' => 'Lapaire Glasses Uganda SMC Limited',
                'Côte d\'Ivoire' => 'Lapaire Glasses Côte-d\'Ivoire SARL'
            };
            
            // Enqueue the Queueable job for each employee
            for (flair__Employee__c employee : employeesToSync) {
                
                // Retrieve OrganizationGroup based on flair__Entity__r.Name
                String organizationGroup = entityToOrgGroup.containsKey(employee.flair__Entity__r.Name) 
                    ? entityToOrgGroup.get(employee.flair__Entity__r.Name) 
                    : null; // Assign null if no match (optional handling)

                Map<String, Object> employeeData = new Map<String, Object> {
                    'EmployeePositionId' => 0, // This will be auto-generated by PaySpace
                    'EmployeeNumber' => employee.flair__Employee_Number__c,
                    'EffectiveDate' => employee.flair__Start_Date__c,
                    'OrganizationPositionWithCode' => employee.flair__Position__c,
                    'OrganizationGroup' => organizationGroup
                };
                            
                // Call Queueable job to create employee position on Payspace
                System.enqueueJob(new PayspacePositionQueueable(employeeData, employee.Id));
            }
        } catch (Exception e) {
            System.debug('Error while scheduling Payspace sync: ' + e.getMessage());
        }
    }
}